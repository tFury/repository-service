swagger: "2.0"
info:
  description: "Service for the communication with the postgres DB"
  version: "1.0.0"
  title: "Repository Service"
  contact:
    email: "thomas_haenig@gmx.de"
  license:
    name: "MIT"
host: "localhost:48101"
basePath: "/v1"
tags:
  - name: "connectiontest"
    description: "to test the connection"
  - name: "table"
    description: "table"
schemes:
- "http"
paths:
  /connectiontest:
    x-swagger-router-controller: "connectiontest"
    get:
      tags:
      - "connectiontest"
      summary: "connectiontest"
      description: "connectiontest"
      operationId: "connectiontest"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: object
            properties:
              msg:
                type: string
                description: "response string"
        400:
          description: "Invalid status value"
  /table:
    x-swagger-router-controller: "table"
    get:
      tags: 
        - "table"
      summary: "get all tables"
      operationId: "showAllTables"
      produces:
        - "application/json"
      responses:
        200:
          description: "successful operation"
          schema:
            type: object
            properties:
              success:
                type: boolean
              msg:
                type: string
              data:
                type: array
                items:
                  type: object
                  $ref: "#/definitions/tableInfo"
        400:
          description: "Invalid status value"
definitions:
  tableInfo:
    type: object
    properties:
      schemaname: 
        type: string
      tablename: 
        type: string
      tableowner: 
        type: string
      tablespace: 
        type: string
      hasindexes: 
        type: boolean
      hasrules: 
        type: boolean
      hastriggers: 
        type: boolean
      rowsecurity: 
        type: boolean
  table:
    type: object
    properties:
      name:
        type: string
      fields:
        $ref: "#/definitions/fields"
  fields:
    type: array
    items:
      $ref: "#/definitions/field"
  field:
    type: object
    properties:
      fieldname:
        type: string
      fieldtype:
        type: string